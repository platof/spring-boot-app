name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      EKS_CLUSTER_NAME: java-app-cluster
      AWS_REGION: us-east-1

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin


      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/java-app:${{ github.sha }} .

      # Log in to Docker registry (example: AWS ECR)
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Push the Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/java-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Update kubeconfig to access the EKS cluster
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name java-app-cluster

      # Deploy the application to EKS
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/java-app java-app=${{ secrets.DOCKER_USERNAME }}/java-app:${{ github.sha }}
          kubectl rollout status deployment/java-app
