name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  aws_region: us-east-1
  eks_cluster_name: java-app-cluster

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      short_hash: ${{ steps.get_commit.outputs.short_hash }}

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      - id: get_commit
        run: echo "::set-output name=short_hash::$(git rev-parse --short HEAD)"

      # Log in to Docker registry
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/java-app:${{ steps.get_commit.outputs.short_hash }} .

      # Push Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/java-app:${{ steps.get_commit.outputs.short_hash }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.aws_region }}

      # Update kubeconfig to access the EKS cluster
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.aws_region }} --name ${{ env.eks_cluster_name }}

      # Deploy the application to EKS
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/java-app java-app=${{ secrets.DOCKER_USERNAME }}/java-app:${{ needs.build.outputs.short_hash }}
          kubectl rollout status deployment/java-app
